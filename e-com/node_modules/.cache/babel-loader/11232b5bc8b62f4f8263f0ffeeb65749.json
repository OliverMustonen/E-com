{"ast":null,"code":"import actiontypes from \"../actiontypes\";\nconst initState = {\n  ShoppingCart: [],\n  totalCartQuantity: 0,\n  totalCartAmount: 0\n};\n\nconst cartReducer = (state = initState, action) => {\n  switch (action.type) {\n    case actiontypes().cart.add:\n      let itemIndex = state.shoppingCart.findIndex(product => product._id === action.payload._id);\n      itemIndex < 0 ? state.shoppingCart = [...state.shoppingCart, { ...action.payload,\n        quantity: 1\n      }] : state.shoppingCart[itemIndex].quantity += 1;\n      return state;\n\n    default:\n      return state;\n  }\n};\n\nexport default cartReducer;","map":{"version":3,"sources":["U:/Working-progress/INLÄMNINGSUPPGIFTER/JV 3 INLÄMNINGSUPPGIFT/Inlämningsuppgift/JS-3/e-com/src/store/reducers/cartReducer.js"],"names":["actiontypes","initState","ShoppingCart","totalCartQuantity","totalCartAmount","cartReducer","state","action","type","cart","add","itemIndex","shoppingCart","findIndex","product","_id","payload","quantity"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,gBAAxB;AAEA,MAAMC,SAAS,GAAG;AACdC,EAAAA,YAAY,EAAE,EADA;AAEdC,EAAAA,iBAAiB,EAAE,CAFL;AAGdC,EAAAA,eAAe,EAAE;AAHH,CAAlB;;AASA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGL,SAAT,EAAoBM,MAApB,KAA+B;AACnD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKR,WAAW,GAAGS,IAAd,CAAmBC,GAAxB;AACI,UAAIC,SAAS,GAAGL,KAAK,CAACM,YAAN,CAAmBC,SAAnB,CAA6BC,OAAO,IAAIA,OAAO,CAACC,GAAR,KAAgBR,MAAM,CAACS,OAAP,CAAeD,GAAvE,CAAhB;AACAJ,MAAAA,SAAS,GAAG,CAAZ,GACEL,KAAK,CAACM,YAAN,GAAqB,CAAC,GAAGN,KAAK,CAACM,YAAV,EAAwB,EAAC,GAAGL,MAAM,CAACS,OAAX;AAAoBC,QAAAA,QAAQ,EAAE;AAA9B,OAAxB,CADvB,GAEEX,KAAK,CAACM,YAAN,CAAmBD,SAAnB,EAA8BM,QAA9B,IAA0C,CAF5C;AAGA,aAAOX,KAAP;;AAEJ;AACI,aAAOA,KAAP;AATR;AAWC,CAZD;;AAcA,eAAeD,WAAf","sourcesContent":["import actiontypes from \"../actiontypes\";\r\n\r\nconst initState = {\r\n    ShoppingCart: [],\r\n    totalCartQuantity: 0,\r\n    totalCartAmount: 0\r\n}\r\n\r\n\r\n\r\n\r\nconst cartReducer = (state = initState, action) => {\r\nswitch(action.type) {\r\n    case actiontypes().cart.add:\r\n        let itemIndex = state.shoppingCart.findIndex(product => product._id === action.payload._id)\r\n        itemIndex < 0\r\n        ? state.shoppingCart = [...state.shoppingCart, {...action.payload, quantity: 1}]\r\n        : state.shoppingCart[itemIndex].quantity += 1\r\n        return state\r\n\r\n    default:\r\n        return state\r\n }\r\n}\r\n\r\nexport default cartReducer;"]},"metadata":{},"sourceType":"module"}